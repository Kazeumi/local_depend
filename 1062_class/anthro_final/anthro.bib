
@article{hippel2003,
  title = {Open {{Source Software}} and the ``{{Private}}-{{Collective}}'' {{Innovation Model}}: {{Issues}} for {{Organization Science}}},
  volume = {14},
  issn = {1047-7039},
  doi = {10.1287/orsc.14.2.209.14992},
  abstract = {Currently, two models of innovation are prevalent in organization science. The ?private investment? model assumes returns to the innovator result from private goods and efficient regimes of intellectual property protection. The ?collective action? model assumes that under conditions of market failure, innovators collaborate in order to produce a public good. The phenomenon of open source software development shows that users program to solve their own as well as shared technical problems, and freely reveal their innovations without appropriating private returns from selling the software. In this paper, we propose that open source software development is an exemplar of a compound ?private-collective? model of innovation that contains elements of both the private investment and the collective action models and can offer society the ?best of both worlds? under many conditions. We describe a new set of research questions this model raises for scholars in organization science. We offer some details regarding the types of data available for open source projects in order to ease access for researchers who are unfamiliar with these, and also offer some advice on conducting empirical studies on open source software development processes.},
  number = {2},
  journal = {Organization Science},
  author = {von Hippel, Eric and von Krogh, Georg},
  month = apr,
  year = {2003},
  pages = {209-223},
  file = {/home/liao/Zotero/storage/7VE349C7/Sine - 2011 - Organization Science.pdf},
  annote = {doi: 10.1287/orsc.14.2.209.14992}
}

@article{lernerjosh2003,
  title = {Some {{Simple Economics}} of {{Open Source}}},
  volume = {50},
  issn = {0022-1821},
  doi = {10.1111/1467-6451.00174},
  abstract = {There has been a recent surge of interest in open source software development, which involves developers at many different locations and organizations sharing code to develop and refine programs. To an economist, the behavior of individual programmers and commercial companies engaged in open source projects is initially startling. This paper makes a preliminary exploration of the economics of open source software. We highlight the extent to which labor economics, especially the literature on ?career concerns?, and industrial organization theory can explain many of these projects? features. We conclude by listing interesting research questions related to open source software.},
  number = {2},
  journal = {The Journal of Industrial Economics},
  author = {{Lerner Josh} and {Tirole Jean}},
  month = mar,
  year = {2003},
  pages = {197-234},
  file = {/home/liao/Zotero/storage/56GMY8RU/Lerner Josh and Tirole Jean - 2003 - Some Simple Economics of Open Source.pdf},
  annote = {doi: 10.1111/1467-6451.00174}
}

@article{bergquistmagnus2001,
  title = {The Power of Gifts: Organizing Social Relationships in Open Source Communities},
  volume = {11},
  issn = {1350-1917},
  doi = {10.1046/j.1365-2575.2001.00111.x},
  abstract = {Abstract. In writings on the open source software development model, it is often argued that it is successful as a result of the gift economy that embraces activities in online communities. However, the theoretical foundations for this argument are seldom discussed and empirically tested. Starting with the ?classic? theories of gift giving, we discuss how they need to be developed in order to explain gift-giving practices in digital domains. In this paper, we argue that the gift economy is important, not only because it creates openness, but also because it organizes relationships between people in a certain way. Open source software development relies on gift giving as a way of getting new ideas and prototypes out into circulation. This also implies that the giver gets power from giving away. This power is used as a way of guaranteeing the quality of the code. We relate this practice to how gifts, in the form of new scientific knowledge, are given to the research community, and how this is done through peer review processes.},
  number = {4},
  journal = {Information Systems Journal},
  author = {{Bergquist Magnus} and {Ljungberg Jan}},
  year = {2001},
  keywords = {Gift culture,open source,peer review},
  pages = {305-320},
  file = {/home/liao/Zotero/storage/MGUREX66/Bergquist Magnus and Ljungberg Jan - 2008 - The power of gifts organizing social relationship.pdf},
  annote = {doi: 10.1046/j.1365-2575.2001.00111.x}
}

@article{lerner2001,
  title = {The Open Source Movement: {{Key}} Research Questions},
  volume = {45},
  issn = {0014-2921},
  doi = {10.1016/S0014-2921(01)00124-6},
  number = {4},
  journal = {15th Annual Congress of the European Economic Association},
  author = {Lerner, Josh and Tirole, Jean},
  month = may,
  year = {2001},
  keywords = {Research and development,Software,Technological innovation},
  pages = {819-826},
  file = {/home/liao/Zotero/storage/SLHL25KL/Lerner and Tirole - 2001 - The open source movement Key research questions}
}

@article{lakhani2003,
  title = {Why Hackers Do What They Do: {{Understanding}} Motivation and Effort in Free/Open Source Software Projects},
  journal = {MIT Sloan Working Paper No. 4425-03},
  author = {Lakhani, Karim R and Wolf, Robert G},
  year = {2003},
  file = {/home/liao/Zotero/storage/IX6WK2FH/Lakhani and Wolf - 2003 - Why hackers do what they do Understanding motivat.pdf}
}

@article{andersen-gott2012,
  title = {Why Do Commercial Companies Contribute to Open Source Software?},
  volume = {32},
  issn = {0268-4012},
  doi = {10.1016/j.ijinfomgt.2011.10.003},
  number = {2},
  journal = {International Journal of Information Management},
  author = {{Andersen-Gott}, Morten and Ghinea, Gheorghita and Bygstad, Bendik},
  month = apr,
  year = {2012},
  keywords = {Commercial,Drivers,Open source software},
  pages = {106-117},
  file = {/home/liao/Zotero/storage/A775H5V8/Andersen-Gott et al. - 2012 - Why do commercial companies contribute to open sou.pdf}
}

@article{zeitlyn2003,
  title = {Gift Economies in the Development of Open Source Software: Anthropological Reflections},
  volume = {32},
  issn = {0048-7333},
  doi = {10.1016/S0048-7333(03)00053-2},
  number = {7},
  journal = {Open Source Software Development},
  author = {Zeitlyn, David},
  month = jul,
  year = {2003},
  keywords = {Cathedral and bazaar,Gift economy,Non-economic motivation,Prestige,Symbolic capital},
  pages = {1287-1291}
}

@article{2018h,
  title = {Free and Open-Source Software},
  copyright = {Creative Commons Attribution-ShareAlike License},
  abstract = {Free and open-source software (FOSS) is software that can be classified as both free software and open-source software. That is, anyone is freely licensed to use, copy, study, and change the software in any way, and the source code is openly shared so that people are encouraged to voluntarily improve the design of the software. This is in contrast to proprietary software, where the software is under restrictive copyright and the source code is usually hidden from the users.
The benefits of using FOSS can include decreased software costs, increased security and stability (especially in regard to malware), protecting privacy, education, and giving users more control over their own hardware. Free, open-source operating systems such as Linux and descendants of BSD are widely utilized today, powering millions of servers, desktops, smartphones (e.g. Android), and other devices. Free software licenses and open-source licenses are used by many software packages. The Free software movement and the open-source software movement are online social movements behind widespread production and adoption of FOSS.},
  language = {en},
  journal = {Wikipedia},
  month = jun,
  year = {2018},
  file = {/home/liao/Zotero/storage/ATJPJ3D3/index.html},
  note = {Page Version ID: 847663350}
}

@article{raymond1999,
  title = {The Cathedral and the Bazaar},
  volume = {12},
  issn = {1874-6314},
  doi = {10.1007/s12130-999-1026-0},
  abstract = {I anatomize a successful open-source project, fetchmail, that was run as a deliberate test of some theories about software engineering suggested by the history of Linux. I discuss these theories in terms of two fundamentally different development styles, the "cathedral" model, representing most of the commercial world, versus the "bazaar" model of the Linux world. I show that these models derive from opposing assumptions about the nature of the software-debugging task. I then make a sustained argument from the Linux experience for the proposition that "Given enough eyeballs, all bugs are shallow," suggest productive analogies with other self-correcting systems of selfish agents, and conclude with some exploration of the implications of this insight for the future of software.},
  number = {3},
  journal = {Knowledge, Technology \& Policy},
  author = {Raymond, Eric},
  month = sep,
  year = {1999},
  pages = {23-49}
}

@misc{raymond2004,
  title = {The {{Jargon File}}: Hacker},
  howpublished = {http://www.catb.org/jargon/html/H/hacker.html},
  author = {Raymond, Eric},
  year = {2004},
  file = {/home/liao/Zotero/storage/WCAJMIZ7/hacker.html}
}

@article{daveelder-vass2015,
  title = {The {{Moral Economy}} of {{Digital Gifts}}},
  volume = {5},
  doi = {10.3167/IJSQ.2015.050103},
  language = {English},
  number = {1},
  journal = {The International Journal of Social Quality},
  author = {{Dave Elder-Vass}},
  year = {2015},
  pages = {35-50},
  file = {/home/liao/Zotero/storage/EQXVA2R8/Dave Elder-Vass - 2015 - The Moral Economy of Digital Gifts.pdf}
}

@misc{engelfriet2011,
  title = {A History of {{FOSS}} Law and Licensing \textendash{} {{The International Free}} and {{Open Source Software Law Book}}},
  language = {en-US},
  journal = {The International Free and Open Source Software Law Book},
  author = {Engelfriet, Arnoud},
  year = {2011},
  file = {/home/liao/Zotero/storage/WRJUZECM/a-history-of-foss-law-and-licensing.html}
}

@article{2018i,
  title = {Software Copyright},
  copyright = {Creative Commons Attribution-ShareAlike License},
  abstract = {Software copyright is the extension of copyright law to machine-readable software. While many of the legal principles and policy debates concerning software copyright have close parallels in other domains of copyright law, there are a number of distinctive issues that arise with software. This article will primarily focus on topics particular to software.
Software copyright is used by Software Developers and proprietary software companies to prevent the unauthorized copying of their software. Free and open source licenses also rely on copyright law to enforce their terms. For instance, copyleft licenses impose a duty on licensees to share their modifications to the work with the user or copy owner under some circumstances. No such duty would apply had the software in question been in the public domain.},
  language = {en},
  journal = {Wikipedia},
  month = may,
  year = {2018},
  file = {/home/liao/Zotero/storage/KI3K8ALQ/index.html},
  note = {Page Version ID: 842522257}
}

@misc{zotero-128,
  title = {Free Software Movement - {{Wikipedia}}},
  howpublished = {https://en.wikipedia.org/wiki/Free\_software\_movement},
  file = {/home/liao/Zotero/storage/6GSV9WZZ/Free_software_movement.html}
}

@article{2018j,
  title = {{{GNU General Public License}}},
  copyright = {Creative Commons Attribution-ShareAlike License},
  abstract = {The GNU General Public License (GNU GPL or GPL) is a widely used free software license, which guarantees end users the freedom to run, study, share and modify the software. The license was originally written by Richard Stallman of the Free Software Foundation (FSF) for the GNU Project, and grants the recipients of a computer program the rights of the Free Software Definition. The GPL is a copyleft license, which means that derivative work can only be distributed under the same license terms. This is in distinction to permissive free software licenses, of which the BSD licenses and the MIT License are widely used examples. GPL was the first copyleft license for general use.
Historically, the GPL license family has been one of the most popular software licenses in the free and open-source software domain. Prominent free software programs licensed under the GPL include the Linux kernel and the GNU Compiler Collection (GCC). David A. Wheeler argues that the copyleft provided by the GPL was crucial to the success of Linux-based systems, giving the programmers who contributed to the kernel the assurance that their work would benefit the whole world and remain free, rather than being exploited by software companies that would not have to give anything back to the community.
In 2007, the third version of the license (GNU GPLv3) was released to address some perceived problems with the second version (GNU GPLv2) that were discovered during its long-time usage. To keep the license up to date, the GPL license includes an optional "any later version" clause, allowing users to choose between the original terms or the terms in new versions as updated by the FSF. Developers can omit it when licensing their software; for instance the Linux kernel is licensed under GPLv2 without the "any later version" clause.},
  language = {en},
  journal = {Wikipedia},
  month = jun,
  year = {2018},
  file = {/home/liao/Zotero/storage/PW6DNRRQ/index.html},
  note = {Page Version ID: 846428492}
}

@article{2018k,
  title = {Open-Source Software Movement},
  copyright = {Creative Commons Attribution-ShareAlike License},
  abstract = {The open-source software movement is a movement that supports the use of open-source licenses for some or all software, a part of the broader notion of open collaboration. The open-source movement was started to spread the concept/idea of open-source software. Programmers who support the open-source movement philosophy contribute to the open-source community by voluntarily writing and exchanging programming code for software development. The term "open source" requires that no one can discriminate against a group in not sharing the edited code or hinder others from editing their already-edited work. This approach to software development allows anyone to obtain and modify open-source code. These modifications are distributed back to the developers within the open-source community of people who are working with the software. In this way, the identities of all individuals participating in code modification are disclosed and the transformation of the code is documented over time. This method makes it difficult to establish ownership of a particular bit of code but is in keeping with the open-source movement philosophy. These goals promote the production of "high quality programs" as well as "working cooperatively with other similarly minded people" to improve open-source technology.},
  language = {en},
  journal = {Wikipedia},
  month = jun,
  year = {2018},
  file = {/home/liao/Zotero/storage/Q2Y3WUVI/index.html},
  note = {Page Version ID: 847099463}
}

@article{peng2011,
  title = {Reproducible {{Research}} in {{Computational Science}}},
  volume = {334},
  doi = {10.1126/science.1213847},
  abstract = {Computational science has led to exciting new developments, but the nature of the work has exposed limitations in our ability to evaluate published findings. Reproducibility has the potential to serve as a minimum standard for judging scientific claims when full independent replication of a study is not possible.},
  number = {6060},
  journal = {Science},
  author = {Peng, Roger D.},
  month = dec,
  year = {2011},
  pages = {1226}
}

@misc{2018l,
  title = {Free {{Software Foundation}}},
  howpublished = {https://www.fsf.org/about/},
  journal = {Free Software Foundation},
  year = {2018},
  file = {/home/liao/Zotero/storage/HAGT8B8J/about.html}
}


