#!/bin/bash

## This is a script for attatching yaml header for posts going to be published on Yongfu's Blog. It is specifically suited for html_fragment output.
# argument 1 is file name

#### Part 1: Enter post date for file name ####
post_path=/home/liao/liao961120.github.io/_posts/

correct=f
while [[ "$correct" == f ]]; do

    echo -e "Enter date in\n1)'$(date +%Y-%m-%d)' format\t2)'today'\t3)'match': "
    read date

    case "$date" in
        20[0-9][0-9]-[0-9][0-9]-[0-9][0-9])
            correct=t
            echo -e "\nYou entered '${date}'\n"
            ;;
        today|2)
            correct=t
            date=$(date +%Y-%m-%d)
            echo -e "\nUse default: ${date}\n"
            ;;
        match|3)
            old_file=$(find ${post_path} -name "*${1##*/}")
            if [[ -e "$old_file" ]]; then 
                date=$(echo ${old_file##*/} | egrep -o "^20[0-9]{2}-[0-9]{2}-[0-9]{2}")
                correct=t
            else
                echo -e "\nNo matched file name.\n"
            fi
            ;;
        *)
            echo -e  "\nIncorrect date format.\n"
            ;;
    esac
done


#### Part 2: Read yaml from html_fragment ####

from=$(cat $1 | egrep '^<!--yaml$' -n | grep -Eo '^[^:]+')
to=$(cat $1 | egrep '^yaml-->$' -n | grep -Eo '^[^:]+')
(( ++from ))
(( --to ))

# Create yaml header file (will become post file)
header_path=/home/liao/liao961120.github.io/_posts/"${date}-${1##*/}"
head $1 -n $to | tail +$from > "$header_path"


#### Part 3: Append html_fragment to header file

cat $1 >> "$header_path"


#### Part 4: Replace <code> <pre> classes for syntax highlight

sed 's/<pre class="r"><code>/<pre><code class="r">/g' "$header_path" > "${post_path}foo.html"
sed 's/<pre class="bash"><code>/<pre><code class="bash">/g' "${post_path}foo.html" > "$header_path"

## Suppress highlighting for output code chunks
sed 's/<pre><code>/<pre><code class="nohighlight">/g' "$header_path" > "${post_path}foo.html"
cat "${post_path}foo.html" > "$header_path"


#### Part 5: Add Title to footnotes div

read -p "Choose language: 'ch', 'en', 'no' > " lang

if [[ "$lang" =~ (ch|tw|zh) ]]; then
    foot_head="附註"
    echo "Chinese"
elif [[ "$lang" =~ (en|eng) ]]; then
    foot_head="Notes"
    echo "English"
elif [[ "$lang" =~ (no|NO|No) ]]; then
    foot_head="no"
    echo "No Title"
    echo -e "\nFile Created: \n'$header_path'"
    exit 0
else
    echo "Error"
    exit 1
fi

sed "s_<div class=\"footnotes\">_<div class=\"footnotes\"><h2>"$foot_head"</h2>_g" "$header_path" > "${post_path}foo.html"
cat "${post_path}foo.html" > "$header_path"

sed 's_<hr />__g' "$header_path" > "${post_path}foo.html"
cat "${post_path}foo.html" > "$header_path"


#### Part 6: Append date

cat >> "$header_path"  << _EOF_
<p style="text-align:right;font-size:7px;margin-top:0px;margin-bottom:0px;padding-top:0px;padding-bottom:1px">
上次更新：$(date +%Y-%m-%d)
</p>
_EOF_



echo -e "\nFile Created: \n'$header_path'"

